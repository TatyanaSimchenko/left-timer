{"version":3,"sources":["components/PauseButton/PauseButton.jsx","components/PlayButton/PlayButton.jsx","components/Timer/Timer.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["PauseButton","props","xmlns","className","viewBox","fill","fillRule","d","clipRule","PlayButton","Timer","start","step","useState","time","setTime","play","setPlay","timeFormat","Math","floor","slice","useEffect","interval","setInterval","prevTime","clearInterval","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PAsBeA,MApBf,SAAqBC,GACnB,OACE,mDAAYA,GAAZ,cACE,qBACEC,MAAM,6BACNC,UAAU,UACVC,QAAQ,YACRC,KAAK,eAJP,SAME,sBACEC,SAAS,UACTC,EAAE,sHACFC,SAAS,cAVf,aCkBWC,MApBf,SAAoBR,GAClB,OACE,mDAAYA,GAAZ,cACE,qBACEC,MAAM,6BACNC,UAAU,UACVC,QAAQ,YACRC,KAAK,eAJP,SAME,sBACEC,SAAS,UACTC,EAAE,0GACFC,SAAS,cAVf,Y,MC8CWE,MA7Cf,SAAeT,GACb,IAAQU,EAAgBV,EAAhBU,MAAOC,EAASX,EAATW,KACf,EAAwBC,mBAASF,GAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAAwBF,oBAAS,GAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACMC,GACH,IAAMC,KAAKC,MAAON,EAAO,IAAS,KAAKO,OAAO,GAC/C,KACC,IAAMF,KAAKC,MAAON,EAAO,IAAQ,KAAKO,OAAO,GAsBhD,OApBAC,qBAAU,WACR,IAAIC,EAAW,KAgBf,OAdIP,EACFO,EAAWC,aAAY,WACrBT,GAAQ,SAACU,GACP,OAAIA,EAAW,EACNA,EALM,IAKsBb,GAEnCK,GAAQ,GACWN,QAGtB,KAEHe,cAAcH,GAET,kBAAMG,cAAcH,MAC1B,CAACP,EAAML,EAAOC,IAGf,sBAAKT,UAAU,QAAf,UACE,qBAAKA,UAAU,iBAAf,SAAiCe,IACjC,qBAAKf,UAAU,aAAf,SACE,cAAC,EAAD,CAAYwB,QAAS,kBAAMV,GAAQ,QAErC,qBAAKd,UAAU,aAAf,SACE,wBAAQwB,QAAS,kBAAMZ,EAAQJ,IAA/B,qBAEF,qBAAKR,UAAU,aAAf,SACE,cAAC,EAAD,CAAawB,QAAS,kBAAMV,GAAQ,YCjC7BW,MARf,WACE,OACE,sBAAMzB,UAAU,OAAhB,SACE,cAAC,EAAD,CAAOQ,MAAM,QAAQC,KAAK,SCMjBiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.65bb540b.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction PauseButton(props) {\r\n  return (\r\n    <button {...props}>\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        className=\"h-5 w-5\"\r\n        viewBox=\"0 0 20 20\"\r\n        fill=\"currentColor\"\r\n      >\r\n        <path\r\n          fillRule=\"evenodd\"\r\n          d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zM7 8a1 1 0 012 0v4a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v4a1 1 0 102 0V8a1 1 0 00-1-1z\"\r\n          clipRule=\"evenodd\"\r\n        />\r\n      </svg>\r\n      Pause\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default PauseButton;\r\n","import React from \"react\";\r\n\r\nfunction PlayButton(props) {\r\n  return (\r\n    <button {...props}>\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        className=\"h-5 w-5\"\r\n        viewBox=\"0 0 20 20\"\r\n        fill=\"currentColor\"\r\n      >\r\n        <path\r\n          fillRule=\"evenodd\"\r\n          d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM9.555 7.168A1 1 0 008 8v4a1 1 0 001.555.832l3-2a1 1 0 000-1.664l-3-2z\"\r\n          clipRule=\"evenodd\"\r\n        />\r\n      </svg>\r\n      Play\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default PlayButton;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PauseButton from \"../PauseButton/PauseButton\";\r\nimport PlayButton from \"../PlayButton/PlayButton\";\r\nimport \"./Timer.css\";\r\n\r\nfunction Timer(props) {\r\n  const { start, step } = props;\r\n  const [time, setTime] = useState(start);\r\n  const [play, setPlay] = useState(true);\r\n  const timeFormat =\r\n    (\"0\" + Math.floor((time / 60000) % 60)).slice(-2) +\r\n    \":\" +\r\n    (\"0\" + Math.floor((time / 1000) % 60)).slice(-2);\r\n\r\n  useEffect(() => {\r\n    let interval = null;\r\n    let stepInProgress = 1000;\r\n    if (play) {\r\n      interval = setInterval(() => {\r\n        setTime((prevTime) => {\r\n          if (prevTime > 0) {\r\n            return prevTime - stepInProgress * step;\r\n          } else {\r\n            setPlay(false);\r\n            return (prevTime = start);\r\n          }\r\n        });\r\n      }, 1000);\r\n    } else {\r\n      clearInterval(interval);\r\n    }\r\n    return () => clearInterval(interval);\r\n  }, [play, start, step]);\r\n\r\n  return (\r\n    <div className=\"timer\">\r\n      <div className=\"timer__display\">{timeFormat}</div>\r\n      <div className=\"timer__btn\">\r\n        <PlayButton onClick={() => setPlay(true)} />\r\n      </div>\r\n      <div className=\"timer__btn\">\r\n        <button onClick={() => setTime(start)}>Reset</button>\r\n      </div>\r\n      <div className=\"timer__btn\">\r\n        <PauseButton onClick={() => setPlay(false)} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Timer;\r\n","import \"./App.css\";\nimport Timer from \"./components/Timer/Timer\";\n\nfunction App() {\n  return (\n    <main className=\"main\">\n      <Timer start=\"60000\" step=\"1\" />\n    </main>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}