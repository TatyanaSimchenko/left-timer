{"version":3,"sources":["components/PauseButton/PauseButton.jsx","components/PlayButton/PlayButton.jsx","components/timer/Timer.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["PauseButton","props","xmlns","className","viewBox","fill","fillRule","d","clipRule","PlayButton","Timer","useState","minutes","setMinutes","seconds","setSeconds","displayMessage","setDisplayMessage","status","setStatus","useEffect","secondTimerId","setInterval","clearInterval","timerMinutes","timerSeconds","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PAsBeA,MApBf,SAAqBC,GACnB,OACE,mDAAYA,GAAZ,cACE,qBACEC,MAAM,6BACNC,UAAU,UACVC,QAAQ,YACRC,KAAK,eAJP,SAME,sBACEC,SAAS,UACTC,EAAE,sHACFC,SAAS,cAVf,aCkBWC,MApBf,SAAoBR,GAClB,OACE,mDAAYA,GAAZ,cACE,qBACEC,MAAM,6BACNC,UAAU,UACVC,QAAQ,YACRC,KAAK,eAJP,SAME,sBACEC,SAAS,UACTC,EAAE,0GACFC,SAAS,cAVf,Y,MC2DWE,MA3Df,WACE,MAA8BC,mBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA8BF,mBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA4CJ,oBAAS,GAArD,mBAAOK,EAAP,KAAuBC,EAAvB,KACA,EAA4BN,mBAAS,WAArC,mBAAOO,EAAP,KAAeC,EAAf,KAEAC,qBAAU,WACR,IAAIC,EAoBJ,MAnBe,YAAXH,IACFG,EAAgBC,aAAY,WAC1B,GAAgB,IAAZR,EACF,GAAgB,IAAZF,EACFG,EAAW,IACXF,EAAWD,EAAU,OAChB,CAGLC,EAFcG,EAAiB,EAAI,GAGnCD,EAFc,IAGdE,GAAmBD,QAGrBD,EAAWD,EAAU,KAEtB,MAGE,WACLS,cAAcF,MAEf,CAACT,EAASE,EAASI,IAEtB,IAMMM,EAAeZ,EAAU,GAAV,WAAmBA,GAAYA,EAC9Ca,EAAeX,EAAU,GAAV,WAAmBA,GAAYA,EACpD,OACE,sBAAKX,UAAU,QAAf,UACE,sBAAKA,UAAU,iBAAf,UACGqB,EADH,IACkBC,KAGlB,qBAAKtB,UAAU,aAAf,SACE,cAAC,EAAD,CAAYuB,QAZA,WAChBP,EAAU,gBAaR,qBAAKhB,UAAU,aAAf,SACE,cAAC,EAAD,CAAauB,QAlBD,WAChBP,EAAU,eAmBR,qBAAKhB,UAAU,iBAAf,SACGa,GAAkB,oDC7CZW,MARf,WACE,OACE,sBAAMxB,UAAU,OAAhB,SACE,cAAC,EAAD,OCKSyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.339a2935.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction PauseButton(props) {\r\n  return (\r\n    <button {...props}>\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        className=\"h-5 w-5\"\r\n        viewBox=\"0 0 20 20\"\r\n        fill=\"currentColor\"\r\n      >\r\n        <path\r\n          fillRule=\"evenodd\"\r\n          d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zM7 8a1 1 0 012 0v4a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v4a1 1 0 102 0V8a1 1 0 00-1-1z\"\r\n          clipRule=\"evenodd\"\r\n        />\r\n      </svg>\r\n      Pause\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default PauseButton;\r\n","import React from \"react\";\r\n\r\nfunction PlayButton(props) {\r\n  return (\r\n    <button {...props}>\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        className=\"h-5 w-5\"\r\n        viewBox=\"0 0 20 20\"\r\n        fill=\"currentColor\"\r\n      >\r\n        <path\r\n          fillRule=\"evenodd\"\r\n          d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM9.555 7.168A1 1 0 008 8v4a1 1 0 001.555.832l3-2a1 1 0 000-1.664l-3-2z\"\r\n          clipRule=\"evenodd\"\r\n        />\r\n      </svg>\r\n      Play\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default PlayButton;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PauseButton from \"../PauseButton/PauseButton\";\r\nimport PlayButton from \"../PlayButton/PlayButton\";\r\nimport \"./timer.css\";\r\nfunction Timer() {\r\n  const [minutes, setMinutes] = useState(1);\r\n  const [seconds, setSeconds] = useState(0);\r\n  const [displayMessage, setDisplayMessage] = useState(false);\r\n  const [status, setStatus] = useState(\"working\");\r\n\r\n  useEffect(() => {\r\n    let secondTimerId;\r\n    if (status === \"working\") {\r\n      secondTimerId = setInterval(() => {\r\n        if (seconds === 0) {\r\n          if (minutes !== 0) {\r\n            setSeconds(59);\r\n            setMinutes(minutes - 1);\r\n          } else {\r\n            let minutes = displayMessage ? 1 : 0;\r\n            let seconds = 59;\r\n            setMinutes(minutes);\r\n            setSeconds(seconds);\r\n            setDisplayMessage(!displayMessage);\r\n          }\r\n        } else {\r\n          setSeconds(seconds - 1);\r\n        }\r\n      }, 1000);\r\n    }\r\n\r\n    return () => {\r\n      clearInterval(secondTimerId);\r\n    };\r\n  }, [minutes, seconds, status]);\r\n\r\n  const stopTimer = () => {\r\n    setStatus(\"paused\");\r\n  };\r\n  const playTimer = () => {\r\n    setStatus(\"working\");\r\n  };\r\n  const timerMinutes = minutes < 10 ? `0${minutes}` : minutes;\r\n  const timerSeconds = seconds < 10 ? `0${seconds}` : seconds;\r\n  return (\r\n    <div className=\"timer\">\r\n      <div className=\"timer__display\">\r\n        {timerMinutes}:{timerSeconds}\r\n      </div>\r\n\r\n      <div className=\"timer__btn\">\r\n        <PlayButton onClick={playTimer} />\r\n      </div>\r\n      <div className=\"timer__btn\">\r\n        <PauseButton onClick={stopTimer} />\r\n      </div>\r\n      <div className=\"timer__message\">\r\n        {displayMessage && <div>Break time!</div>}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Timer;\r\n","import \"./App.css\";\nimport Timer from \"./components/timer/Timer\";\nimport { useState } from \"react\";\n\nfunction App() {\n  return (\n    <main className=\"main\">\n      <Timer />\n    </main>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}